This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by m6809-run configure 0.92, which was
generated by GNU Autoconf 2.72.  Invocation command line was

  $ ./configure

## --------- ##
## Platform. ##
## --------- ##

hostname = jyrkimbp
uname -m = x86_64
uname -r = 23.5.0
uname -s = Darwin
uname -v = Darwin Kernel Version 23.5.0: Wed May  1 20:09:52 PDT 2024; root:xnu-10063.121.3~5/RELEASE_X86_64

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = Mach kernel version:
	 Darwin Kernel Version 23.5.0: Wed May  1 20:09:52 PDT 2024; root:xnu-10063.121.3~5/RELEASE_X86_64
Kernel configured for up to 16 processors.
8 processors are physically available.
16 processors are logically available.
Processor type: x86_64h (Intel x86-64h Haswell)
Processors active: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15
Primary memory available: 32.00 gigabytes
Default processor set: 729 tasks, 2703 threads, 16 processors
Load average: 2.53, Mach factor: 13.46
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /Users/jty/bin/
PATH: /Users/jty/bin/sh/
PATH: /usr/local/bin/
PATH: /System/Cryptexes/App/usr/bin/
PATH: /usr/bin/
PATH: /bin/
PATH: /usr/sbin/
PATH: /sbin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/local/bin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/bin/
PATH: /var/run/com.apple.security.cryptexd/codex.system/bootstrap/usr/appleinternal/bin/
PATH: /opt/X11/bin/
PATH: /Library/Apple/usr/bin/
PATH: /Applications/Wireshark.app/Contents/MacOS/
PATH: /Applications/VMware Fusion.app/Contents/Public/
PATH: /Users/jty/.local/bin/


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2427: looking for aux files: config.guess config.sub compile missing install-sh
configure:2440:  trying ./
configure:2469:   ./config.guess found
configure:2469:   ./config.sub found
configure:2469:   ./compile found
configure:2469:   ./missing found
configure:2451:   ./install-sh found
configure:2600: checking for a BSD-compatible install
configure:2674: result: /usr/bin/install -c
configure:2685: checking whether build environment is sane
configure:2740: result: yes
configure:2901: checking for a race-free mkdir -p
configure:2944: result: mkdir -p
configure:2951: checking for gawk
configure:2987: result: no
configure:2951: checking for mawk
configure:2987: result: no
configure:2951: checking for nawk
configure:2987: result: no
configure:2951: checking for awk
configure:2972: found /usr/bin/awk
configure:2984: result: awk
configure:2995: checking whether make sets $(MAKE)
configure:3019: result: yes
configure:3049: checking whether make supports nested variables
configure:3068: result: yes
configure:3271: checking for gcc
configure:3292: found /usr/bin/gcc
configure:3304: result: gcc
configure:3663: checking for C compiler version
configure:3672: gcc --version >&5
Apple clang version 15.0.0 (clang-1500.3.9.4)
Target: x86_64-apple-darwin23.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:3683: $? = 0
configure:3672: gcc -v >&5
Apple clang version 15.0.0 (clang-1500.3.9.4)
Target: x86_64-apple-darwin23.5.0
Thread model: posix
InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
configure:3683: $? = 0
configure:3672: gcc -V >&5
clang: error: argument to '-V' is missing (expected 1 value)
clang: error: no input files
configure:3683: $? = 1
configure:3672: gcc -qversion >&5
clang: error: unknown argument '-qversion'; did you mean '--version'?
clang: error: no input files
configure:3683: $? = 1
configure:3672: gcc -version >&5
clang: error: unknown argument '-version'; did you mean '--version'?
clang: error: no input files
configure:3683: $? = 1
configure:3703: checking whether the C compiler works
configure:3725: gcc -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:3729: $? = 0
configure:3780: result: yes
configure:3784: checking for C compiler default output file name
configure:3786: result: a.out
configure:3792: checking for suffix of executables
configure:3799: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:3803: $? = 0
configure:3827: result: 
configure:3851: checking whether we are cross compiling
configure:3859: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:3863: $? = 0
configure:3870: ./conftest
configure:3874: $? = 0
configure:3889: result: no
configure:3895: checking for suffix of object files
configure:3918: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:3922: $? = 0
configure:3946: result: o
configure:3950: checking whether the compiler supports GNU C
configure:3970: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:3970: $? = 0
configure:3982: result: yes
configure:3993: checking whether gcc accepts -g
configure:4014: gcc -c -g  conftest.c >&5
configure:4014: $? = 0
configure:4061: result: yes
configure:4081: checking for gcc option to enable C11 features
configure:4096: gcc  -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:182:3: error: "Compiler does not advertise C11 conformance"
# error "Compiler does not advertise C11 conformance"
  ^
conftest.c:214:29: error: use of undeclared identifier 'syntax'
char const utf8_literal[] = u8"happens to be ASCII" "another string";
                            ^
conftest.c:213:12: note: expanded from macro 'u8'
#define u8 syntax error!
           ^
conftest.c:214:29: error: expected ';' after top level declarator
conftest.c:213:19: note: expanded from macro 'u8'
#define u8 syntax error!
                  ^
conftest.c:218:19: warning: redefinition of typedef 'long_ptr' is a C11 feature [-Wtypedef-redefinition]
typedef long int *long_ptr;
                  ^
conftest.c:217:15: note: previous definition is here
typedef long *long_ptr;
              ^
conftest.c:219:18: warning: redefinition of typedef 'long_ptr' is a C11 feature [-Wtypedef-redefinition]
typedef long_ptr long_ptr;
                 ^
conftest.c:218:19: note: previous definition is here
typedef long int *long_ptr;
                  ^
conftest.c:247:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:257:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:276:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
5 warnings and 9 errors generated.
configure:4096: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| /* Does the compiler advertise C11 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
| # error "Compiler does not advertise C11 conformance"
| #endif
| 
| // Check _Alignas.
| char _Alignas (double) aligned_as_double;
| char _Alignas (0) no_special_alignment;
| extern char aligned_as_int;
| char _Alignas (0) _Alignas (int) aligned_as_int;
| 
| // Check _Alignof.
| enum
| {
|   int_alignment = _Alignof (int),
|   int_array_alignment = _Alignof (int[100]),
|   char_alignment = _Alignof (char)
| };
| _Static_assert (0 < -_Alignof (int), "_Alignof is signed");
| 
| // Check _Noreturn.
| int _Noreturn does_not_return (void) { for (;;) continue; }
| 
| // Check _Static_assert.
| struct test_static_assert
| {
|   int x;
|   _Static_assert (sizeof (int) <= sizeof (long int),
|                   "_Static_assert does not work in struct");
|   long int y;
| };
| 
| // Check UTF-8 literals.
| #define u8 syntax error!
| char const utf8_literal[] = u8"happens to be ASCII" "another string";
| 
| // Check duplicate typedefs.
| typedef long *long_ptr;
| typedef long int *long_ptr;
| typedef long_ptr long_ptr;
| 
| // Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
| struct anonymous
| {
|   union {
|     struct { int i; int j; };
|     struct { int k; long int l; } w;
|   };
|   int m;
| } v1;
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   
|   _Static_assert ((offsetof (struct anonymous, i)
| 		   == offsetof (struct anonymous, w.k)),
| 		  "Anonymous union alignment botch");
|   v1.i = 2;
|   v1.w.k = 5;
|   ok |= v1.i != 5;
| 
|   return ok;
| }
| 
configure:4096: gcc -std=gnu11 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:182:3: error: "Compiler does not advertise C11 conformance"
# error "Compiler does not advertise C11 conformance"
  ^
conftest.c:214:29: error: use of undeclared identifier 'syntax'
char const utf8_literal[] = u8"happens to be ASCII" "another string";
                            ^
conftest.c:213:12: note: expanded from macro 'u8'
#define u8 syntax error!
           ^
conftest.c:214:29: error: expected ';' after top level declarator
conftest.c:213:19: note: expanded from macro 'u8'
#define u8 syntax error!
                  ^
conftest.c:218:19: warning: redefinition of typedef 'long_ptr' is a C11 feature [-Wtypedef-redefinition]
typedef long int *long_ptr;
                  ^
conftest.c:217:15: note: previous definition is here
typedef long *long_ptr;
              ^
conftest.c:219:18: warning: redefinition of typedef 'long_ptr' is a C11 feature [-Wtypedef-redefinition]
typedef long_ptr long_ptr;
                 ^
conftest.c:218:19: note: previous definition is here
typedef long int *long_ptr;
                  ^
conftest.c:247:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:257:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:276:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
5 warnings and 9 errors generated.
configure:4096: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| /* Does the compiler advertise C11 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 201112L
| # error "Compiler does not advertise C11 conformance"
| #endif
| 
| // Check _Alignas.
| char _Alignas (double) aligned_as_double;
| char _Alignas (0) no_special_alignment;
| extern char aligned_as_int;
| char _Alignas (0) _Alignas (int) aligned_as_int;
| 
| // Check _Alignof.
| enum
| {
|   int_alignment = _Alignof (int),
|   int_array_alignment = _Alignof (int[100]),
|   char_alignment = _Alignof (char)
| };
| _Static_assert (0 < -_Alignof (int), "_Alignof is signed");
| 
| // Check _Noreturn.
| int _Noreturn does_not_return (void) { for (;;) continue; }
| 
| // Check _Static_assert.
| struct test_static_assert
| {
|   int x;
|   _Static_assert (sizeof (int) <= sizeof (long int),
|                   "_Static_assert does not work in struct");
|   long int y;
| };
| 
| // Check UTF-8 literals.
| #define u8 syntax error!
| char const utf8_literal[] = u8"happens to be ASCII" "another string";
| 
| // Check duplicate typedefs.
| typedef long *long_ptr;
| typedef long int *long_ptr;
| typedef long_ptr long_ptr;
| 
| // Anonymous structures and unions -- taken from C11 6.7.2.1 Example 1.
| struct anonymous
| {
|   union {
|     struct { int i; int j; };
|     struct { int k; long int l; } w;
|   };
|   int m;
| } v1;
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   
|   _Static_assert ((offsetof (struct anonymous, i)
| 		   == offsetof (struct anonymous, w.k)),
| 		  "Anonymous union alignment botch");
|   v1.i = 2;
|   v1.w.k = 5;
|   ok |= v1.i != 5;
| 
|   return ok;
| }
| 
configure:4110: result: unsupported
configure:4130: checking for gcc option to enable C99 features
configure:4145: gcc  -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:195:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:205:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:224:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
3 warnings and 6 errors generated.
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -std=gnu99 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:195:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:205:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:224:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
3 warnings and 6 errors generated.
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -std=c99 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:195:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:205:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:224:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
3 warnings and 6 errors generated.
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -c99 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
clang: error: unknown argument: '-c99'
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -qlanglvl=extc1x -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
clang: error: unknown argument: '-qlanglvl=extc1x'
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -qlanglvl=extc99 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
clang: error: unknown argument: '-qlanglvl=extc99'
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -AC99 -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
clang: warning: argument unused during compilation: '-AC99' [-Wunused-command-line-argument]
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:195:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:205:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:224:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
3 warnings and 6 errors generated.
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4145: gcc -D_STDC_C99= -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:76:3: error: "Compiler does not advertise C99 conformance"
# error "Compiler does not advertise C99 conformance"
  ^
conftest.c:133:8: error: unknown type name 'inline'
static inline int
       ^
conftest.c:134:29: error: expected ')'
test_restrict (ccp restrict text)
                            ^
conftest.c:134:15: note: to match this '('
test_restrict (ccp restrict text)
              ^
conftest.c:138:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
       ^
conftest.c:138:30: error: use of undeclared identifier 'text'; did you mean 'test'?
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                             ^~~~
                             test
conftest.c:68:5: note: 'test' declared here
int test (int i, double x);
    ^
conftest.c:138:41: warning: comparing a pointer to a null character constant; did you mean to compare to NULL? [-Wpointer-compare]
  for (unsigned int i = 0; *(text+i) != '\0'; ++i)
                                        ^~~~
                                        (void *)0
conftest.c:195:17: error: expected ';' at end of declaration
  char *restrict newvar = "Another string";
                ^
                ;
conftest.c:205:8: warning: GCC does not allow variable declarations in for loop initializers before C99 [-Wgcc-compat]
  for (int i = 0; i < ia->datasize; ++i)
       ^
conftest.c:224:58: error: use of undeclared identifier 'newvar'
  ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
                                                         ^
3 warnings and 6 errors generated.
configure:4145: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| /* end confdefs.h.  */
| 
| /* Does the compiler advertise C89 conformance?
|    Do not test the value of __STDC__, because some compilers set it to 0
|    while being otherwise adequately conformant. */
| #if !defined __STDC__
| # error "Compiler does not advertise C89 conformance"
| #endif
| 
| #include <stddef.h>
| #include <stdarg.h>
| struct stat;
| /* Most of the following tests are stolen from RCS 5.7 src/conf.sh.  */
| struct buf { int x; };
| struct buf * (*rcsopen) (struct buf *, struct stat *, int);
| static char *e (char **p, int i)
| {
|   return p[i];
| }
| static char *f (char * (*g) (char **, int), char **p, ...)
| {
|   char *s;
|   va_list v;
|   va_start (v,p);
|   s = g (p, va_arg (v,int));
|   va_end (v);
|   return s;
| }
| 
| /* C89 style stringification. */
| #define noexpand_stringify(a) #a
| const char *stringified = noexpand_stringify(arbitrary+token=sequence);
| 
| /* C89 style token pasting.  Exercises some of the corner cases that
|    e.g. old MSVC gets wrong, but not very hard. */
| #define noexpand_concat(a,b) a##b
| #define expand_concat(a,b) noexpand_concat(a,b)
| extern int vA;
| extern int vbee;
| #define aye A
| #define bee B
| int *pvA = &expand_concat(v,aye);
| int *pvbee = &noexpand_concat(v,bee);
| 
| /* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
|    function prototypes and stuff, but not \xHH hex character constants.
|    These do not provoke an error unfortunately, instead are silently treated
|    as an "x".  The following induces an error, until -std is added to get
|    proper ANSI mode.  Curiously \x00 != x always comes out true, for an
|    array size at least.  It is necessary to write \x00 == 0 to get something
|    that is true only with -std.  */
| int osf4_cc_array ['\x00' == 0 ? 1 : -1];
| 
| /* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
|    inside strings and character constants.  */
| #define FOO(x) 'x'
| int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];
| 
| int test (int i, double x);
| struct s1 {int (*f) (int a);};
| struct s2 {int (*f) (double a);};
| int pairnames (int, char **, int *(*)(struct buf *, struct stat *, int),
|                int, int);
| 
| /* Does the compiler advertise C99 conformance? */
| #if !defined __STDC_VERSION__ || __STDC_VERSION__ < 199901L
| # error "Compiler does not advertise C99 conformance"
| #endif
| 
| // See if C++-style comments work.
| 
| #include <stdbool.h>
| extern int puts (const char *);
| extern int printf (const char *, ...);
| extern int dprintf (int, const char *, ...);
| extern void *malloc (size_t);
| extern void free (void *);
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| // dprintf is used instead of fprintf to avoid needing to declare
| // FILE and stderr.
| #define debug(...) dprintf (2, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   #error "your preprocessor is broken"
| #endif
| #if BIG_OK
| #else
|   #error "your preprocessor is broken"
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static bool
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str = "";
|   int number = 0;
|   float fnumber = 0;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| 
|   return *str && number && fnumber;
| }
| 
| 
| int
| main (int argc, char **argv)
| {
|   int ok = 0;
|   
| ok |= (argc == 0 || f (e, argv, 0) != argv[0] || f (e, argv, 1) != argv[1]);
| 
|   
|   // Check bool.
|   _Bool success = false;
|   success |= (argc != 0);
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   success &= test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
|   // Work around memory leak warnings.
|   free (ia);
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[0] = argv[0][0];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   ok |= (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	 || dynamic_array[ni.number - 1] != 543);
| 
|   return ok;
| }
| 
configure:4159: result: unsupported
configure:4179: checking for gcc option to enable C89 features
configure:4194: gcc  -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4194: $? = 0
configure:4213: result: none needed
configure:4239: checking whether gcc understands -c and -o together
configure:4262: gcc -c conftest.c -o conftest2.o
configure:4265: $? = 0
configure:4262: gcc -c conftest.c -o conftest2.o
configure:4265: $? = 0
configure:4278: result: yes
configure:4298: checking whether make supports the include directive
configure:4313: make -f confmf.GNU && cat confinc.out
this is the am__doit target
configure:4316: $? = 0
configure:4335: result: yes (GNU style)
configure:4361: checking dependency style of gcc
configure:4474: result: gcc3
configure:4498: checking for stdio.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for stdlib.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for string.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for inttypes.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for stdint.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for strings.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for sys/stat.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for sys/types.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for unistd.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for sys/time.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for sys/select.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4498: checking for sys/socket.h
configure:4498: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4498: $? = 0
configure:4498: result: yes
configure:4523: checking for grep that handles long lines and -e
configure:4589: result: /usr/bin/grep
configure:4594: checking for egrep
configure:4664: result: /usr/bin/grep -E
configure:4672: checking for netinet/in.h
configure:4672: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4672: $? = 0
configure:4672: result: yes
configure:4678: checking for stdint.h
configure:4678: result: yes
configure:4684: checking for stdlib.h
configure:4684: result: yes
configure:4690: checking for string.h
configure:4690: result: yes
configure:4696: checking for sys/socket.h
configure:4696: result: yes
configure:4702: checking for sys/time.h
configure:4702: result: yes
configure:4708: checking for termios.h
configure:4708: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4708: $? = 0
configure:4708: result: yes
configure:4714: checking for unistd.h
configure:4714: result: yes
configure:4723: checking whether byte ordering is bigendian
configure:4739: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4739: $? = 0
configure:4785: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:4785: $? = 0
configure:4804: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:39:4: error: use of undeclared identifier 'not'
                 not big endian
                 ^
1 error generated.
configure:4804: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_SELECT_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define STDC_HEADERS 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| /* end confdefs.h.  */
| #include <sys/types.h>
| 		#include <sys/param.h>
| 
| int
| main (void)
| {
| #if BYTE_ORDER != BIG_ENDIAN
| 		 not big endian
| 		#endif
| 
|   ;
|   return 0;
| }
configure:4945: result: no
configure:4963: checking for an ANSI C-conforming const
configure:5030: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5030: $? = 0
configure:5040: result: yes
configure:5048: checking for inline
configure:5065: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:34:8: error: unknown type name 'inline'
static inline foo_t static_foo (void) {return 0; }
       ^
conftest.c:34:20: error: expected ';' after top level declarator
static inline foo_t static_foo (void) {return 0; }
                   ^
                   ;
2 errors generated.
configure:5065: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_SELECT_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define STDC_HEADERS 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| /* end confdefs.h.  */
| #ifndef __cplusplus
| typedef int foo_t;
| static inline foo_t static_foo (void) {return 0; }
| inline foo_t foo (void) {return 0; }
| #endif
| 
configure:5065: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5065: $? = 0
configure:5075: result: __inline__
configure:5103: checking for uint16_t
configure:5103: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5103: $? = 0
configure:5103: result: yes
configure:5113: checking for uint32_t
configure:5113: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5113: $? = 0
configure:5113: result: yes
configure:5125: checking for uint8_t
configure:5125: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5125: $? = 0
configure:5125: result: yes
configure:5137: checking for working volatile
configure:5157: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5157: $? = 0
configure:5167: result: yes
configure:5183: checking build system type
configure:5199: result: x86_64-apple-darwin23.5.0
configure:5219: checking host system type
configure:5234: result: x86_64-apple-darwin23.5.0
configure:5254: checking for GNU libc compatible malloc
configure:5286: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:5286: $? = 0
configure:5286: ./conftest
configure:5286: $? = 0
configure:5300: result: yes
configure:5326: checking types of arguments for select
configure:5356: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
configure:5356: $? = 0
configure:5367: result: int,fd_set *,struct timeval *
configure:5384: checking return type of signal handlers
configure:5403: gcc -c -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion  conftest.c >&5
conftest.c:46:8: error: indirection requires pointer operand ('void' invalid)
return *(signal (0, 0)) (0) == 1;
       ^~~~~~~~~~~~~~~~~~~~
1 error generated.
configure:5403: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "m6809-run"
| #define PACKAGE_TARNAME "m6809-run"
| #define PACKAGE_VERSION "0.92"
| #define PACKAGE_STRING "m6809-run 0.92"
| #define PACKAGE_BUGREPORT "brian@oddchange.com"
| #define PACKAGE_URL ""
| #define PACKAGE "m6809-run"
| #define VERSION "0.92"
| #define HAVE_STDIO_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_SYS_SELECT_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define STDC_HEADERS 1
| #define HAVE_NETINET_IN_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_SYS_SOCKET_H 1
| #define HAVE_SYS_TIME_H 1
| #define HAVE_TERMIOS_H 1
| #define HAVE_UNISTD_H 1
| #ifndef __cplusplus
| #define inline __inline__
| #endif
| #define TIME_WITH_SYS_TIME 1
| #define HAVE_MALLOC 1
| #define SELECT_TYPE_ARG1 int
| #define SELECT_TYPE_ARG234 (fd_set *)
| #define SELECT_TYPE_ARG5 (struct timeval *)
| /* end confdefs.h.  */
| #include <sys/types.h>
| #include <signal.h>
| 
| int
| main (void)
| {
| return *(signal (0, 0)) (0) == 1;
|   ;
|   return 0;
| }
configure:5413: result: void
configure:5423: checking for vprintf
configure:5423: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
conftest.c:57:6: warning: incompatible redeclaration of library function 'vprintf' [-Wincompatible-library-redeclaration]
char vprintf (void);
     ^
conftest.c:57:6: note: 'vprintf' is a builtin with type 'int (const char *, struct __va_list_tag *)'
1 warning generated.
configure:5423: $? = 0
configure:5423: result: yes
configure:5444: checking for gettimeofday
configure:5444: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:5444: $? = 0
configure:5444: result: yes
configure:5450: checking for memset
configure:5450: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
conftest.c:59:6: warning: incompatible redeclaration of library function 'memset' [-Wincompatible-library-redeclaration]
char memset (void);
     ^
conftest.c:59:6: note: 'memset' is a builtin with type 'void *(void *, int, unsigned long)'
1 warning generated.
configure:5450: $? = 0
configure:5450: result: yes
configure:5456: checking for select
configure:5456: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:5456: $? = 0
configure:5456: result: yes
configure:5462: checking for strchr
configure:5462: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
conftest.c:61:6: warning: incompatible redeclaration of library function 'strchr' [-Wincompatible-library-redeclaration]
char strchr (void);
     ^
conftest.c:61:6: note: 'strchr' is a builtin with type 'char *(const char *, int)'
1 warning generated.
configure:5462: $? = 0
configure:5462: result: yes
configure:5468: checking for strstr
configure:5468: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
conftest.c:62:6: warning: incompatible redeclaration of library function 'strstr' [-Wincompatible-library-redeclaration]
char strstr (void);
     ^
conftest.c:62:6: note: 'strstr' is a builtin with type 'char *(const char *, const char *)'
1 warning generated.
configure:5468: $? = 0
configure:5468: result: yes
configure:5474: checking for strtoul
configure:5474: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
conftest.c:63:6: warning: incompatible redeclaration of library function 'strtoul' [-Wincompatible-library-redeclaration]
char strtoul (void);
     ^
conftest.c:63:6: note: 'strtoul' is a builtin with type 'unsigned long (const char *, char **, int)'
1 warning generated.
configure:5474: $? = 0
configure:5474: result: yes
configure:5480: checking for socket
configure:5480: gcc -o conftest -std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion   conftest.c  >&5
configure:5480: $? = 0
configure:5480: result: yes
configure:5646: checking that generated files are newer than configure
configure:5652: result: done
configure:5676: creating ./config.status

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by m6809-run config.status 0.92, which was
generated by GNU Autoconf 2.72.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on jyrkimbp

config.status:886: creating Makefile
config.status:886: creating config.h
config.status:1115: executing depfiles commands
config.status:1192: cd .       && sed -e '/# am--include-marker/d' Makefile         | make -f - am--depfiles
make: Nothing to be done for `am--depfiles'.
config.status:1197: $? = 0

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=x86_64-apple-darwin23.5.0
ac_cv_c_bigendian=no
ac_cv_c_compiler_gnu=yes
ac_cv_c_const=yes
ac_cv_c_inline=__inline__
ac_cv_c_uint16_t=yes
ac_cv_c_uint32_t=yes
ac_cv_c_uint8_t=yes
ac_cv_c_volatile=yes
ac_cv_env_CC_set=
ac_cv_env_CC_value=
ac_cv_env_CFLAGS_set=set
ac_cv_env_CFLAGS_value='-std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion'
ac_cv_env_CPPFLAGS_set=
ac_cv_env_CPPFLAGS_value=
ac_cv_env_LDFLAGS_set=
ac_cv_env_LDFLAGS_value=
ac_cv_env_LIBS_set=
ac_cv_env_LIBS_value=
ac_cv_env_build_alias_set=
ac_cv_env_build_alias_value=
ac_cv_env_host_alias_set=
ac_cv_env_host_alias_value=
ac_cv_env_target_alias_set=
ac_cv_env_target_alias_value=
ac_cv_func_gettimeofday=yes
ac_cv_func_malloc_0_nonnull=yes
ac_cv_func_memset=yes
ac_cv_func_select=yes
ac_cv_func_select_args='int,fd_set *,struct timeval *'
ac_cv_func_socket=yes
ac_cv_func_strchr=yes
ac_cv_func_strstr=yes
ac_cv_func_strtoul=yes
ac_cv_func_vprintf=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_netinet_in_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdio_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_select_h=yes
ac_cv_header_sys_socket_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_time_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_termios_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=x86_64-apple-darwin23.5.0
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_EGREP_TRADITIONAL='/usr/bin/grep -E'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_AWK=awk
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_cc_c11=no
ac_cv_prog_cc_c89=
ac_cv_prog_cc_c99=no
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_stdc=
ac_cv_prog_make_make_set=yes
ac_cv_type_signal=void
am_cv_CC_dependencies_compiler_type=gcc3
am_cv_make_support_nested_variables=yes
am_cv_prog_cc_c_o=yes

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} '\''/Users/jty/repos/exec09/missing'\'' aclocal-1.16'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='$${TAR-tar}'
AM_BACKSLASH='\'
AM_DEFAULT_V='$(AM_DEFAULT_VERBOSITY)'
AM_DEFAULT_VERBOSITY='1'
AM_V='$(V)'
AUTOCONF='${SHELL} '\''/Users/jty/repos/exec09/missing'\'' autoconf'
AUTOHEADER='${SHELL} '\''/Users/jty/repos/exec09/missing'\'' autoheader'
AUTOMAKE='${SHELL} '\''/Users/jty/repos/exec09/missing'\'' automake-1.16'
AWK='awk'
CC='gcc'
CCDEPMODE='depmode=gcc3'
CFLAGS='-std=c89 -Wno-error -Wno-implicit-function-declaration -Wno-int-conversion'
CPPFLAGS=''
CSCOPE='cscope'
CTAGS='ctags'
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
ECHO_C='\c'
ECHO_N=''
ECHO_T=''
EGREP='/usr/bin/grep -E'
ETAGS='etags'
EXEEXT=''
GREP='/usr/bin/grep'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LDFLAGS=''
LIBOBJS=''
LIBS=''
LTLIBOBJS=''
MAKEINFO='${SHELL} '\''/Users/jty/repos/exec09/missing'\'' makeinfo'
MKDIR_P='mkdir -p'
OBJEXT='o'
PACKAGE='m6809-run'
PACKAGE_BUGREPORT='brian@oddchange.com'
PACKAGE_NAME='m6809-run'
PACKAGE_STRING='m6809-run 0.92'
PACKAGE_TARNAME='m6809-run'
PACKAGE_URL=''
PACKAGE_VERSION='0.92'
PATH_SEPARATOR=':'
READLINE_LIBS=''
SET_MAKE=''
SHELL='/bin/sh'
STRIP=''
VERSION='0.92'
ac_ct_CC='gcc'
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__nodep='_no'
am__quote=''
am__tar='$${TAR-tar} chof - "$$tardir"'
am__untar='$${TAR-tar} xf -'
bindir='${exec_prefix}/bin'
build='x86_64-apple-darwin23.5.0'
build_alias=''
build_cpu='x86_64'
build_os='darwin23.5.0'
build_vendor='apple'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='x86_64-apple-darwin23.5.0'
host_alias=''
host_cpu='x86_64'
host_os='darwin23.5.0'
host_vendor='apple'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /Users/jty/repos/exec09/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(MKDIR_P)'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/usr/local'
program_transform_name='s,x,x,'
psdir='${docdir}'
runstatedir='${localstatedir}/run'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "m6809-run"
#define PACKAGE_TARNAME "m6809-run"
#define PACKAGE_VERSION "0.92"
#define PACKAGE_STRING "m6809-run 0.92"
#define PACKAGE_BUGREPORT "brian@oddchange.com"
#define PACKAGE_URL ""
#define PACKAGE "m6809-run"
#define VERSION "0.92"
#define HAVE_STDIO_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_STRINGS_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_UNISTD_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_SYS_SELECT_H 1
#define HAVE_SYS_SOCKET_H 1
#define STDC_HEADERS 1
#define HAVE_NETINET_IN_H 1
#define HAVE_STDINT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_SYS_SOCKET_H 1
#define HAVE_SYS_TIME_H 1
#define HAVE_TERMIOS_H 1
#define HAVE_UNISTD_H 1
#ifndef __cplusplus
#define inline __inline__
#endif
#define TIME_WITH_SYS_TIME 1
#define HAVE_MALLOC 1
#define SELECT_TYPE_ARG1 int
#define SELECT_TYPE_ARG234 (fd_set *)
#define SELECT_TYPE_ARG5 (struct timeval *)
#define RETSIGTYPE void
#define HAVE_VPRINTF 1
#define HAVE_GETTIMEOFDAY 1
#define HAVE_MEMSET 1
#define HAVE_SELECT 1
#define HAVE_STRCHR 1
#define HAVE_STRSTR 1
#define HAVE_STRTOUL 1
#define HAVE_SOCKET 1

configure: exit 0
